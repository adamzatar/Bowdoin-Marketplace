name: Monorepo CI

on:
  push:
    branches: [ main, develop, "release/*" ]
    paths-ignore:
      - "infra/**"
      - ".github/workflows/infra-deploy.yml"
      - "**/*.md"
      - "docs/**"
      - "ADRs/**"
      - ".changeset/**"
  pull_request:
    branches: ["**"]
    paths-ignore:
      - "infra/**"
      - ".github/workflows/infra-deploy.yml"
      - "**/*.md"
      - "docs/**"
      - "ADRs/**"
      - ".changeset/**"
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  NODE_VERSION: "20.x"
  PNPM_VERSION: "10.17.1"
  NEXT_TELEMETRY_DISABLED: "1"
  CI: "1"

jobs:
  # -----------------------
  # Lint
  # -----------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Compute pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: PNPM network tuning
        run: |
          pnpm config set fetch-retries 5
          pnpm config set fetch-retry-factor 3
          pnpm config set fetch-retry-maxtimeout 60000
          pnpm config set fetch-retry-mintimeout 5000

      - name: Install deps (retry; frozen)
        run: |
          set -euo pipefail
          for n in 1 2 3; do
            pnpm install --frozen-lockfile && break || {
              echo "pnpm install failed (attempt $n). Retrying in 10s..."
              sleep 10
            }
          done

      - name: Prettier (check)
        run: pnpm -w exec prettier --check . || echo "Prettier not configured"

      - name: ESLint
        run: pnpm -w exec eslint . --ext .ts,.tsx,.mts,.cts || echo "ESLint not configured"

      - name: Upload pnpm logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-logs-lint
          path: |
            **/pnpm-debug.log
            pnpm-debug.log
          if-no-files-found: ignore
          retention-days: 7

  # -----------------------
  # Typecheck
  # -----------------------
  typecheck:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Compute pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install deps (frozen)
        run: pnpm install --frozen-lockfile

      - name: TypeScript - build mode
        run: pnpm -w exec tsc -b

      - name: Upload pnpm logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-logs-typecheck
          path: |
            **/pnpm-debug.log
            pnpm-debug.log
          if-no-files-found: ignore
          retention-days: 7

  # -----------------------
  # Build (workspace)
  # -----------------------
  build:
    runs-on: ubuntu-latest
    needs: [typecheck]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Compute pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install deps (frozen)
        run: pnpm install --frozen-lockfile

      - name: Build (workspace)
        run: pnpm -w run build || echo "No build script at root"

      - name: Upload pnpm/build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-logs-build
          path: |
            **/pnpm-debug.log
            pnpm-debug.log
            build-*.log
          if-no-files-found: ignore
          retention-days: 7

      # Optional: upload a web build artifact if present
      - name: Upload web build (if present)
        if: ${{ hashFiles('apps/web/.next/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: |
            apps/web/.next
            apps/web/next.config.*js
            apps/web/package.json
          if-no-files-found: ignore
          retention-days: 7

  # -----------------------
  # Tests (with Postgres/Redis)
  # -----------------------
  test:
    runs-on: ubuntu-latest
    needs: [build]
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/appdb
      REDIS_URL: redis://localhost:6379
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Compute pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install deps (frozen)
        run: pnpm install --frozen-lockfile

      - name: Prisma generate (if present)
        run: |
          if [ -f packages/db/prisma/schema.prisma ]; then
            pnpm --filter @bowdoin/db exec prisma generate
          fi

      - name: Run unit tests
        run: |
          if pnpm -w exec vitest --version >/dev/null 2>&1; then
            pnpm -w exec vitest run --coverage --reporter=dot
          elif pnpm -w exec jest --version >/dev/null 2>&1; then
            pnpm -w exec jest --ci --coverage
          else
            echo "No known test runner; skipping tests."
          fi

      - name: Upload coverage (if generated)
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage/**
            **/coverage/**
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload pnpm logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-logs-test
          path: |
            **/pnpm-debug.log
            pnpm-debug.log
          if-no-files-found: ignore
          retention-days: 7
